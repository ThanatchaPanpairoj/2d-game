#BlueJ class context
comment0.params=frameWidth\ frameHeight\ grid
comment0.target=GameComponent(int,\ int,\ GridComponent)
comment0.text=\r\n\ Initializes\ the\ game\ component.\ Sets\ the\ time\ to\ display\ the\ control\ instructions\ to\ 10\ seconds\ (600\ frames).\r\n\ Sets\ counters\ for\ shooting\ at\ 0,\ creates\ empty\ ArrayLists\ to\ store\ projectiles\ and\ enemies.\r\n\ Starts\ the\ game\ with\ a\ specified\ difficulty\ and\ creates\ the\ user\ object.\r\n\ \r\n\ @param\ frameWidth\ \ \ the\ width\ of\ the\ frame.\r\n\ @param\ frameHeight\ \ the\ height\ of\ the\ frame.\r\n\r\n
comment1.params=g
comment1.target=void\ paintComponent(java.awt.Graphics)
comment1.text=\r\n\ Draws\ all\ of\ the\ game\ objects,\ including\ the\ user,\ projectiles,\ and\ enemies.\ This\ paintComponent\r\n\ method\ gets\ called\ every\ 1000\ /\ 60\ millisecond\ so\ it\ updates\ 60\ times\ per\ 1000\ millisecond.\r\n\ It\ also\ determines\ the\ projectile\ collisions,\ and\ draws\ the\ instructions,\ statistics,\ and\ game\ over\ state.\r\n\r\n\ @param\ \ g\ \ Graphics\r\n\ @return\ \ \ \ void\r\n\ \r\n
comment10.params=enemyIndex\ enemyX\ enemyY\ frameDelay
comment10.target=void\ enemyShoot(int,\ double,\ double,\ int)
comment10.text=\r\n\ Shoots\ enemy\ projectiles\ and\ adjusts\ the\ fire\ rate.\r\n\ \r\n\ @param\ enemyIndex\ \ \ the\ enemy\ index\ in\ the\ enemies\ ArrayList\ \r\n\ @param\ enemyX\ \ \ \ \ \ \ the\ x-coordinate\ of\ the\ enemy\r\n\ @param\ enemyY\ \ \ \ \ \ \ the\ y-coordinate\ of\ the\ enemy\r\n\ @param\ frameDelay\ \ \ shoots\ a\ projectile\ every\ frameDelay\ frames\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ void\r\n
comment11.params=bossIndex\ bossX\ bossY\ frameDelay
comment11.target=void\ bossShoot(int,\ double,\ double,\ int)
comment11.text=\r\n\ Shoots\ boss\ projectiles\ and\ adjusts\ the\ fire\ rate.\r\n\ \r\n\ @param\ bossIndex\ \ \ \ the\ boss\ index\ in\ the\ boss\ ArrayList\ \r\n\ @param\ bossX\ \ \ \ \ \ \ \ the\ x-coordinate\ of\ the\ boss\r\n\ @param\ bossY\ \ \ \ \ \ \ \ the\ y-coordinate\ of\ the\ boss\r\n\ @param\ frameDelay\ \ \ shoots\ a\ projectile\ every\ frameDelay\ frames\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ void\r\n
comment12.params=maxBosses\ maxEnemies\ frameDelay
comment12.target=void\ spawnEnemy(int,\ int,\ int)
comment12.text=\r\n\ Spawns\ a\ random\ enemy\ according\ to\ the\ current\ difficulty\ of\ the\ game.\r\n\ \r\n\ @param\ maxBosses\ \ \ \ the\ maximum\ currently\ allowed\ number\ of\ bosses\r\n\ @param\ maxEnemies\ \ \ the\ maximum\ currently\ allowed\ number\ of\ enemies\r\n\ @param\ frameDelay\ \ \ number\ of\ frames\ before\ spawning\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ void\r\n
comment13.params=
comment13.target=boolean\ isGame()
comment13.text=\r\n\ Returns\ whether\ the\ game\ is\ in\ progress.\r\n\ \r\n\ @return\ whether\ game\ is\ on\r\n
comment14.params=
comment14.target=int\ getScore()
comment14.text=\r\n\ Returns\ the\ current\ score.\r\n\ \r\n\ @return\ the\ current\ player's\ score\r\n
comment15.params=
comment15.target=int\ getUserStamina()
comment15.text=\r\n\ Returns\ the\ current\ stamina\ of\ the\ user.\r\n\ \r\n\ @return\ stamina\ of\ user\r\n
comment16.params=
comment16.target=int\ getShotMode()
comment16.text=\r\n\ Returns\ the\ current\ shot\ mode\ of\ the\ user.\r\n\ \r\n\ @return\ user's\ shooting\ mode\r\n
comment17.params=mode
comment17.target=void\ changeShotMode(int)
comment17.text=\r\n\ Changes\ to\ different\ shooting\ modes.\ Also\ sets\ the\ number\ of\ frames\ to\ display\ the\ shot\ mode.\r\n\ \r\n\ @param\ mode\ \ \ the\ mode\ to\ change\ to\r\n\ @return\ \ \ \ \ \ \ void\r\n
comment18.params=autoaim
comment18.target=void\ autoaim(boolean)
comment19.params=
comment19.target=boolean\ getAutoaim()
comment2.params=g2\ text\ heightFromCenter
comment2.target=void\ drawCenteredText(java.awt.Graphics2D,\ java.lang.String,\ int)
comment2.text=\r\n\ Draws\ text\ that\ is\ centered\ and\ shifted\ horizontally\ by\ heightFromCenter\r\n\r\n\ @param\ g2\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ graphics\ context\r\n\ @param\ text\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ string\ to\ be\ drawn\r\n\ @param\ heightFromCenter\ \ \ \ \ \ \ \ \ \ the\ shift\ in\ horizontal\ position\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ void\r\n
comment20.params=automove
comment20.target=void\ automove(boolean)
comment21.params=
comment21.target=boolean\ getAutomove()
comment22.params=startingDifficulty
comment22.target=void\ changeStartingDifficulty(int)
comment22.text=\r\n\ Changes\ the\ starting\ difficulty\ of\ the\ game.\r\n\ \r\n\ @param\ startingDifficulty\ \ \ the\ starting\ difficulty\ to\ be\ used\ in\ the\ game\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ void\r\n
comment23.params=
comment23.target=void\ restart()
comment23.text=\r\n\ Restarts\ the\ game.\ This\ creates\ a\ new\ user\ object\ and\ brand\ new\ ArrayLists\ for\ the\ enemies\ and\ projectiles.\r\n\ Sets\ statistics\ back\ to\ zero,\ and\ redisplays\ the\ instructions.\r\n\ \r\n\ @return\ void\r\n
comment3.params=isSpacebar\ dx\ dy
comment3.target=void\ moveBy(boolean,\ double,\ double)
comment3.text=\r\n\ Moves\ user\ object\ by\ an\ amount.\ Prevents\ going\ off\ screen.\ Adjusts\ stamina\ if\ user\ is\ boosting.\r\n\r\n\ @param\ isSpacebar\ \ boolean\ for\ using\ spacebar\ to\ boost\r\n\ @param\ dx\ \ \ \ \ \ \ \ \ \ change\ in\ x\r\n\ @param\ dy\ \ \ \ \ \ \ \ \ \ change\ in\ y\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ void\r\n
comment4.params=mouseX\ mouseY
comment4.target=void\ updateMouse(double,\ double)
comment4.text=\r\n\ Updates\ the\ known\ location\ of\ the\ mouse.\ Used\ to\ test\ shooting.\r\n\ \r\n\ @param\ mouseX\ the\ x\ coordinate\ of\ the\ mouse\r\n\ @param\ mouseY\ the\ y\ coordinate\ of\ the\ mouse\r\n\ @return\ \ \ \ \ \ \ void\r\n
comment5.params=boosting\ left\ right\ up\ down\ firing\ autofire
comment5.target=void\ updateKeys(boolean,\ boolean,\ boolean,\ boolean,\ boolean,\ boolean,\ boolean)
comment5.text=\r\n\ For\ testing\ movement\ keys.\ Updates\ which\ keys\ are\ pressed.\r\n\r\n\ @param\ left\ \ \ boolean\ indicating\ if\ the\ left\ arrow\ key\ is\ pressed\r\n\ @param\ right\ \ boolean\ indicating\ if\ the\ right\ arrow\ key\ is\ pressed\r\n\ @param\ up\ \ \ \ \ boolean\ indicating\ if\ the\ up\ arrow\ key\ is\ pressed\r\n\ @param\ down\ \ \ boolean\ indicating\ if\ the\ down\ arrow\ key\ is\ pressed\r\n\ @return\ void\r\n
comment6.params=frameWidth\ frameHeight
comment6.target=void\ updateSize(int,\ int)
comment6.text=\r\n\ Updates\ the\ known\ size\ of\ the\ frame.\r\n\ \r\n\ @param\ frameWidth\ \ \ \ width\ of\ the\ frame\r\n\ @param\ frameHeight\ \ \ height\ of\ the\ frame\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ void\r\n
comment7.params=dScore
comment7.target=void\ updateScore(int)
comment7.text=\r\n\ Updates\ the\ player's\ score\ by\ dScore\ amount.\r\n\ \r\n\ @param\ dScore\ the\ change\ in\ score\r\n\ @return\ \ \ \ \ \ \ void\r\n
comment8.params=g2
comment8.target=void\ paintStats(java.awt.Graphics)
comment8.text=\r\n\ For\ testing\ movement\ and\ shooting.\ Displays\ which\ keys\ are\ pressed\ and\ the\ mouse\ coordinates.\r\n\ Also\ displays\ game\ info.\r\n\ @param\ g2\ \ Graphics\ context\r\n\ @return\ \ \ \ void\r\n
comment9.params=mouseX\ mouseY
comment9.target=void\ userShoot(double,\ double)
comment9.text=\r\n\ Shoots\ user\ projectiles\ and\ adjusts\ the\ fire\ rate.\r\n\ \r\n\ @param\ mouseX\ \ \ \ \ \ the\ x-coordinate\ of\ the\ mouse\r\n\ @param\ mouseY\ \ \ \ \ \ the\ y-coordinate\ of\ the\ mouse\r\n\ @param\ frameDelay\ \ shoots\ a\ projectile\ every\ frameDelay\ frames\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ void\r\n
numComments=24
